{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shaswat\\\\Desktop\\\\median_prime\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // init variable for data from backend\n  const [backendData, setBackendData] = useState([{}]);\n\n  // retreiving data from backend api\n\n  useEffect(() => {\n    fetch(\"/api\").then(response => response.json()).then(\n    // setting const data variable from retrived data\n    data => {\n      setBackendData(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Enter a number below to find all prime numbers it is greater than\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), typeof backendData.users === 'undefined' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this) : backendData.users.map((user, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: user\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lSbdPEQgG/af9fOvqlnzEvHwb4Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","backendData","setBackendData","fetch","then","response","json","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","users","map","user","i","_c","$RefreshReg$"],"sources":["C:/Users/Shaswat/Desktop/median_prime/client/src/App.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\n\n\nfunction App(){\n  // init variable for data from backend\n  const [backendData, setBackendData] = useState([{}])\n\n  // retreiving data from backend api\n  \n  useEffect(() => {\n    fetch(\"/api\").then(\n      response => response.json()\n    ).then(\n      // setting const data variable from retrived data\n      data => {\n        setBackendData(data)\n      }\n    )\n  }, [])\n\n  return(\n    <div className = \"App\">\n        <h2> Enter a number below to find all prime numbers it is greater than</h2>\n        <input type=\"text\" />\n        {(typeof backendData.users === 'undefined') ? (\n          <p> Loading....</p>\n        ): (\n          backendData.users.map((user, i)=> (\n            <p key ={i}>{user}</p>\n          ))\n        )}\n    </div>\n    \n  )\n}\n\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnB,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EACZ;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEpD;;EAEAD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,MAAM,CAAC,CAACC,IAAI,CAChBC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAC5B,CAAC,CAACF,IAAI;IACJ;IACAG,IAAI,IAAI;MACNL,cAAc,CAACK,IAAI,CAAC;IACtB,CACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAKU,SAAS,EAAG,KAAK;IAAAC,QAAA,gBAClBX,OAAA;MAAAW,QAAA,EAAI;IAAkE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3Ef,OAAA;MAAOgB,IAAI,EAAC;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACnB,OAAOZ,WAAW,CAACc,KAAK,KAAK,WAAW,gBACxCjB,OAAA;MAAAW,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEnBZ,WAAW,CAACc,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBAC5BpB,OAAA;MAAAW,QAAA,EAAaQ;IAAI,GAARC,CAAC;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CACtB,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGV;AAACb,EAAA,CA/BQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAiCZ,eAAeA,GAAG;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}